#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SalonComplex.LinqSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SalonDb")]
	public partial class DataClassesLinqSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertappointment(appointment instance);
    partial void Updateappointment(appointment instance);
    partial void Deleteappointment(appointment instance);
    partial void InsertUserValidate(UserValidate instance);
    partial void UpdateUserValidate(UserValidate instance);
    partial void DeleteUserValidate(UserValidate instance);
    partial void Insertappointment_emp(appointment_emp instance);
    partial void Updateappointment_emp(appointment_emp instance);
    partial void Deleteappointment_emp(appointment_emp instance);
    partial void Insertappointment_service(appointment_service instance);
    partial void Updateappointment_service(appointment_service instance);
    partial void Deleteappointment_service(appointment_service instance);
    partial void Insertclient(client instance);
    partial void Updateclient(client instance);
    partial void Deleteclient(client instance);
    partial void Insertcomment(comment instance);
    partial void Updatecomment(comment instance);
    partial void Deletecomment(comment instance);
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    partial void Insertschedule(schedule instance);
    partial void Updateschedule(schedule instance);
    partial void Deleteschedule(schedule instance);
    partial void Insertservice(service instance);
    partial void Updateservice(service instance);
    partial void Deleteservice(service instance);
    partial void Insertskill(skill instance);
    partial void Updateskill(skill instance);
    partial void Deleteskill(skill instance);
    partial void InsertUserLogin(UserLogin instance);
    partial void UpdateUserLogin(UserLogin instance);
    partial void DeleteUserLogin(UserLogin instance);
    #endregion
		
		public DataClassesLinqSQLDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SalonConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesLinqSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesLinqSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesLinqSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesLinqSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<appointment> appointments
		{
			get
			{
				return this.GetTable<appointment>();
			}
		}
		
		public System.Data.Linq.Table<UserValidate> UserValidates
		{
			get
			{
				return this.GetTable<UserValidate>();
			}
		}
		
		public System.Data.Linq.Table<appointment_emp> appointment_emps
		{
			get
			{
				return this.GetTable<appointment_emp>();
			}
		}
		
		public System.Data.Linq.Table<appointment_service> appointment_services
		{
			get
			{
				return this.GetTable<appointment_service>();
			}
		}
		
		public System.Data.Linq.Table<client> clients
		{
			get
			{
				return this.GetTable<client>();
			}
		}
		
		public System.Data.Linq.Table<comment> comments
		{
			get
			{
				return this.GetTable<comment>();
			}
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
		
		public System.Data.Linq.Table<schedule> schedules
		{
			get
			{
				return this.GetTable<schedule>();
			}
		}
		
		public System.Data.Linq.Table<service> services
		{
			get
			{
				return this.GetTable<service>();
			}
		}
		
		public System.Data.Linq.Table<skill> skills
		{
			get
			{
				return this.GetTable<skill>();
			}
		}
		
		public System.Data.Linq.Table<UserLogin> UserLogins
		{
			get
			{
				return this.GetTable<UserLogin>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CheckEmployee")]
		public ISingleResult<SP_CheckEmployeeResult> SP_CheckEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchDate", DbType="Date")] System.Nullable<System.DateTime> schDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpType", DbType="VarChar(20)")] string empType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schDate, empType);
			return ((ISingleResult<SP_CheckEmployeeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_DeleteEmployee")]
		public int SP_DeleteEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> strEmp_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), strEmp_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_ConfirmEmail")]
		public int SP_ConfirmEmail([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iUserID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string strCodeValidateUser)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iUserID, strCodeValidateUser);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_InsertComments")]
		public int SP_InsertComments([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(60)")] string contactFullname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string contactEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string contactPhone_Num, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string contactRegs, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(600)")] string contact_comments)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), contactFullname, contactEmail, contactPhone_Num, contactRegs, contact_comments);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_SelectEmployee")]
		public ISingleResult<SP_SelectEmployeeResult> SP_SelectEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpType", DbType="VarChar(20)")] string empType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empType);
			return ((ISingleResult<SP_SelectEmployeeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_UpdateEmployee")]
		public int SP_UpdateEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> empid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string strEmpEditType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string strEmpEditFname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1)")] string strEmpEditGender, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string strEmpEditAddr1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string strEmpEditAddr2, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string strEmpEditAddr3, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(13)")] string strEmpEditPhone_Num, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> strEmpEditYoe, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string strEmpEditEmail)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empid, strEmpEditType, strEmpEditFname, strEmpEditGender, strEmpEditAddr1, strEmpEditAddr2, strEmpEditAddr3, strEmpEditPhone_Num, strEmpEditYoe, strEmpEditEmail);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_InsertEmployee")]
		public int SP_InsertEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string strEmpType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string strEmpFname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1)")] string strEmpGender, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string strEmpAddr1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string strEmpAddr2, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string strEmpAddr3, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(13)")] string strEmpPhone_Num, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> strEmpYoe, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string strEmpEmail)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), strEmpType, strEmpFname, strEmpGender, strEmpAddr1, strEmpAddr2, strEmpAddr3, strEmpPhone_Num, strEmpYoe, strEmpEmail);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_ConfirmEmailShowAllFields")]
		public int SP_ConfirmEmailShowAllFields([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iUserID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string strCodeValidateUser, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(253)")] ref string strResult, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RecDateTime", DbType="DateTime")] ref System.Nullable<System.DateTime> recDateTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iUserID, strCodeValidateUser, strResult, recDateTime);
			strResult = ((string)(result.GetParameterValue(2)));
			recDateTime = ((System.Nullable<System.DateTime>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CheckLoginPassWord")]
		public int SP_CheckLoginPassWord([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string strLoginName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string strLoginPassWord, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(203)")] ref string strResult, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RecDateTime", DbType="DateTime")] ref System.Nullable<System.DateTime> recDateTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), strLoginName, strLoginPassWord, strResult, recDateTime);
			strResult = ((string)(result.GetParameterValue(2)));
			recDateTime = ((System.Nullable<System.DateTime>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_ChangePassWord")]
		public int SP_ChangePassWord([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string strLoginName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string strOldLoginPassWord, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string strNewLoginPassWord)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), strLoginName, strOldLoginPassWord, strNewLoginPassWord);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_InsertClient")]
		public int SP_InsertClient([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string clientFname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string clientLname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1)")] string clientGender, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string clientAddr1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string clientAddr2, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string clientAddr3, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string clientPro, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(13)")] string clientPhone_Num)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientFname, clientLname, clientGender, clientAddr1, clientAddr2, clientAddr3, clientPro, clientPhone_Num);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_InsertUserLogin")]
		public int SP_InsertUserLogin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginUname", DbType="VarChar(50)")] string loginUname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginPwd", DbType="VarChar(30)")] string loginPwd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginEmail", DbType="VarChar(200)")] string loginEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginEnable", DbType="SmallInt")] System.Nullable<short> loginEnable, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginDenied", DbType="SmallInt")] System.Nullable<short> loginDenied, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string strCodeValidateUser, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> iIdUser)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginUname, loginPwd, loginEmail, loginEnable, loginDenied, strCodeValidateUser, iIdUser);
			iIdUser = ((System.Nullable<int>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.appointment")]
	public partial class appointment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _app_id;
		
		private System.Nullable<int> _client_id;
		
		private System.Nullable<System.DateTime> _app_day;
		
		private string _notes_requests;
		
		private string _visited_status;
		
		private string _app_status;
		
		private EntitySet<appointment_emp> _appointment_emps;
		
		private EntitySet<appointment_service> _appointment_services;
		
		private EntityRef<client> _client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onapp_idChanging(int value);
    partial void Onapp_idChanged();
    partial void Onclient_idChanging(System.Nullable<int> value);
    partial void Onclient_idChanged();
    partial void Onapp_dayChanging(System.Nullable<System.DateTime> value);
    partial void Onapp_dayChanged();
    partial void Onnotes_requestsChanging(string value);
    partial void Onnotes_requestsChanged();
    partial void Onvisited_statusChanging(string value);
    partial void Onvisited_statusChanged();
    partial void Onapp_statusChanging(string value);
    partial void Onapp_statusChanged();
    #endregion
		
		public appointment()
		{
			this._appointment_emps = new EntitySet<appointment_emp>(new Action<appointment_emp>(this.attach_appointment_emps), new Action<appointment_emp>(this.detach_appointment_emps));
			this._appointment_services = new EntitySet<appointment_service>(new Action<appointment_service>(this.attach_appointment_services), new Action<appointment_service>(this.detach_appointment_services));
			this._client = default(EntityRef<client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int app_id
		{
			get
			{
				return this._app_id;
			}
			set
			{
				if ((this._app_id != value))
				{
					this.Onapp_idChanging(value);
					this.SendPropertyChanging();
					this._app_id = value;
					this.SendPropertyChanged("app_id");
					this.Onapp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", DbType="Int")]
		public System.Nullable<int> client_id
		{
			get
			{
				return this._client_id;
			}
			set
			{
				if ((this._client_id != value))
				{
					if (this._client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onclient_idChanging(value);
					this.SendPropertyChanging();
					this._client_id = value;
					this.SendPropertyChanged("client_id");
					this.Onclient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_day", DbType="DateTime")]
		public System.Nullable<System.DateTime> app_day
		{
			get
			{
				return this._app_day;
			}
			set
			{
				if ((this._app_day != value))
				{
					this.Onapp_dayChanging(value);
					this.SendPropertyChanging();
					this._app_day = value;
					this.SendPropertyChanged("app_day");
					this.Onapp_dayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes_requests", DbType="VarChar(600)")]
		public string notes_requests
		{
			get
			{
				return this._notes_requests;
			}
			set
			{
				if ((this._notes_requests != value))
				{
					this.Onnotes_requestsChanging(value);
					this.SendPropertyChanging();
					this._notes_requests = value;
					this.SendPropertyChanged("notes_requests");
					this.Onnotes_requestsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visited_status", DbType="VarChar(1)")]
		public string visited_status
		{
			get
			{
				return this._visited_status;
			}
			set
			{
				if ((this._visited_status != value))
				{
					this.Onvisited_statusChanging(value);
					this.SendPropertyChanging();
					this._visited_status = value;
					this.SendPropertyChanged("visited_status");
					this.Onvisited_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_status", DbType="VarChar(1)")]
		public string app_status
		{
			get
			{
				return this._app_status;
			}
			set
			{
				if ((this._app_status != value))
				{
					this.Onapp_statusChanging(value);
					this.SendPropertyChanging();
					this._app_status = value;
					this.SendPropertyChanged("app_status");
					this.Onapp_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="appointment_appointment_emp", Storage="_appointment_emps", ThisKey="app_id", OtherKey="app_id")]
		public EntitySet<appointment_emp> appointment_emps
		{
			get
			{
				return this._appointment_emps;
			}
			set
			{
				this._appointment_emps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="appointment_appointment_service", Storage="_appointment_services", ThisKey="app_id", OtherKey="app_id")]
		public EntitySet<appointment_service> appointment_services
		{
			get
			{
				return this._appointment_services;
			}
			set
			{
				this._appointment_services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_appointment", Storage="_client", ThisKey="client_id", OtherKey="client_id", IsForeignKey=true)]
		public client client
		{
			get
			{
				return this._client.Entity;
			}
			set
			{
				client previousValue = this._client.Entity;
				if (((previousValue != value) 
							|| (this._client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._client.Entity = null;
						previousValue.appointments.Remove(this);
					}
					this._client.Entity = value;
					if ((value != null))
					{
						value.appointments.Add(this);
						this._client_id = value.client_id;
					}
					else
					{
						this._client_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_appointment_emps(appointment_emp entity)
		{
			this.SendPropertyChanging();
			entity.appointment = this;
		}
		
		private void detach_appointment_emps(appointment_emp entity)
		{
			this.SendPropertyChanging();
			entity.appointment = null;
		}
		
		private void attach_appointment_services(appointment_service entity)
		{
			this.SendPropertyChanging();
			entity.appointment = this;
		}
		
		private void detach_appointment_services(appointment_service entity)
		{
			this.SendPropertyChanging();
			entity.appointment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserValidate")]
	public partial class UserValidate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoginID;
		
		private string _codeValidate;
		
		private System.DateTime _dateValidate;
		
		private EntityRef<UserLogin> _UserLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginIDChanging(int value);
    partial void OnLoginIDChanged();
    partial void OncodeValidateChanging(string value);
    partial void OncodeValidateChanged();
    partial void OndateValidateChanging(System.DateTime value);
    partial void OndateValidateChanged();
    #endregion
		
		public UserValidate()
		{
			this._UserLogin = default(EntityRef<UserLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					if (this._UserLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeValidate", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string codeValidate
		{
			get
			{
				return this._codeValidate;
			}
			set
			{
				if ((this._codeValidate != value))
				{
					this.OncodeValidateChanging(value);
					this.SendPropertyChanging();
					this._codeValidate = value;
					this.SendPropertyChanged("codeValidate");
					this.OncodeValidateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateValidate", DbType="DateTime NOT NULL")]
		public System.DateTime dateValidate
		{
			get
			{
				return this._dateValidate;
			}
			set
			{
				if ((this._dateValidate != value))
				{
					this.OndateValidateChanging(value);
					this.SendPropertyChanging();
					this._dateValidate = value;
					this.SendPropertyChanged("dateValidate");
					this.OndateValidateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserLogin_UserValidate", Storage="_UserLogin", ThisKey="LoginID", OtherKey="LoginID", IsForeignKey=true)]
		public UserLogin UserLogin
		{
			get
			{
				return this._UserLogin.Entity;
			}
			set
			{
				UserLogin previousValue = this._UserLogin.Entity;
				if (((previousValue != value) 
							|| (this._UserLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserLogin.Entity = null;
						previousValue.UserValidate = null;
					}
					this._UserLogin.Entity = value;
					if ((value != null))
					{
						value.UserValidate = this;
						this._LoginID = value.LoginID;
					}
					else
					{
						this._LoginID = default(int);
					}
					this.SendPropertyChanged("UserLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.appointment_emp")]
	public partial class appointment_emp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _app_id;
		
		private System.Nullable<System.DateTime> _app_time;
		
		private System.Nullable<int> _emp_id;
		
		private System.Nullable<int> _schedule_id;
		
		private EntityRef<appointment> _appointment;
		
		private EntityRef<schedule> _schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onapp_idChanging(int value);
    partial void Onapp_idChanged();
    partial void Onapp_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onapp_timeChanged();
    partial void Onemp_idChanging(System.Nullable<int> value);
    partial void Onemp_idChanged();
    partial void Onschedule_idChanging(System.Nullable<int> value);
    partial void Onschedule_idChanged();
    #endregion
		
		public appointment_emp()
		{
			this._appointment = default(EntityRef<appointment>);
			this._schedule = default(EntityRef<schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_id", DbType="Int NOT NULL")]
		public int app_id
		{
			get
			{
				return this._app_id;
			}
			set
			{
				if ((this._app_id != value))
				{
					if (this._appointment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onapp_idChanging(value);
					this.SendPropertyChanging();
					this._app_id = value;
					this.SendPropertyChanged("app_id");
					this.Onapp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> app_time
		{
			get
			{
				return this._app_time;
			}
			set
			{
				if ((this._app_time != value))
				{
					this.Onapp_timeChanging(value);
					this.SendPropertyChanging();
					this._app_time = value;
					this.SendPropertyChanged("app_time");
					this.Onapp_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Int")]
		public System.Nullable<int> emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					if (this._schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule_id", DbType="Int")]
		public System.Nullable<int> schedule_id
		{
			get
			{
				return this._schedule_id;
			}
			set
			{
				if ((this._schedule_id != value))
				{
					if (this._schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onschedule_idChanging(value);
					this.SendPropertyChanging();
					this._schedule_id = value;
					this.SendPropertyChanged("schedule_id");
					this.Onschedule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="appointment_appointment_emp", Storage="_appointment", ThisKey="app_id", OtherKey="app_id", IsForeignKey=true)]
		public appointment appointment
		{
			get
			{
				return this._appointment.Entity;
			}
			set
			{
				appointment previousValue = this._appointment.Entity;
				if (((previousValue != value) 
							|| (this._appointment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._appointment.Entity = null;
						previousValue.appointment_emps.Remove(this);
					}
					this._appointment.Entity = value;
					if ((value != null))
					{
						value.appointment_emps.Add(this);
						this._app_id = value.app_id;
					}
					else
					{
						this._app_id = default(int);
					}
					this.SendPropertyChanged("appointment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="schedule_appointment_emp", Storage="_schedule", ThisKey="schedule_id,emp_id", OtherKey="schedule_id,employee_id", IsForeignKey=true)]
		public schedule schedule
		{
			get
			{
				return this._schedule.Entity;
			}
			set
			{
				schedule previousValue = this._schedule.Entity;
				if (((previousValue != value) 
							|| (this._schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._schedule.Entity = null;
						previousValue.appointment_emps.Remove(this);
					}
					this._schedule.Entity = value;
					if ((value != null))
					{
						value.appointment_emps.Add(this);
						this._schedule_id = value.schedule_id;
						this._emp_id = value.employee_id;
					}
					else
					{
						this._schedule_id = default(Nullable<int>);
						this._emp_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.appointment_services")]
	public partial class appointment_service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _app_id;
		
		private System.Nullable<int> _service_id;
		
		private EntityRef<appointment> _appointment;
		
		private EntityRef<service> _service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onapp_idChanging(System.Nullable<int> value);
    partial void Onapp_idChanged();
    partial void Onservice_idChanging(System.Nullable<int> value);
    partial void Onservice_idChanged();
    #endregion
		
		public appointment_service()
		{
			this._appointment = default(EntityRef<appointment>);
			this._service = default(EntityRef<service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_id", DbType="Int")]
		public System.Nullable<int> app_id
		{
			get
			{
				return this._app_id;
			}
			set
			{
				if ((this._app_id != value))
				{
					if (this._appointment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onapp_idChanging(value);
					this.SendPropertyChanging();
					this._app_id = value;
					this.SendPropertyChanged("app_id");
					this.Onapp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_id", DbType="Int")]
		public System.Nullable<int> service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					if (this._service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="appointment_appointment_service", Storage="_appointment", ThisKey="app_id", OtherKey="app_id", IsForeignKey=true)]
		public appointment appointment
		{
			get
			{
				return this._appointment.Entity;
			}
			set
			{
				appointment previousValue = this._appointment.Entity;
				if (((previousValue != value) 
							|| (this._appointment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._appointment.Entity = null;
						previousValue.appointment_services.Remove(this);
					}
					this._appointment.Entity = value;
					if ((value != null))
					{
						value.appointment_services.Add(this);
						this._app_id = value.app_id;
					}
					else
					{
						this._app_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("appointment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="service_appointment_service", Storage="_service", ThisKey="service_id", OtherKey="service_id", IsForeignKey=true)]
		public service service
		{
			get
			{
				return this._service.Entity;
			}
			set
			{
				service previousValue = this._service.Entity;
				if (((previousValue != value) 
							|| (this._service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._service.Entity = null;
						previousValue.appointment_services.Remove(this);
					}
					this._service.Entity = value;
					if ((value != null))
					{
						value.appointment_services.Add(this);
						this._service_id = value.service_id;
					}
					else
					{
						this._service_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.client")]
	public partial class client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _client_id;
		
		private int _client_LoginID;
		
		private string _client_fname;
		
		private string _client_lname;
		
		private string _client_gender;
		
		private string _client_street;
		
		private string _client_city;
		
		private string _client_parish;
		
		private string _client_profession;
		
		private string _client_phone;
		
		private EntitySet<appointment> _appointments;
		
		private EntityRef<UserLogin> _UserLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclient_idChanging(int value);
    partial void Onclient_idChanged();
    partial void Onclient_LoginIDChanging(int value);
    partial void Onclient_LoginIDChanged();
    partial void Onclient_fnameChanging(string value);
    partial void Onclient_fnameChanged();
    partial void Onclient_lnameChanging(string value);
    partial void Onclient_lnameChanged();
    partial void Onclient_genderChanging(string value);
    partial void Onclient_genderChanged();
    partial void Onclient_streetChanging(string value);
    partial void Onclient_streetChanged();
    partial void Onclient_cityChanging(string value);
    partial void Onclient_cityChanged();
    partial void Onclient_parishChanging(string value);
    partial void Onclient_parishChanged();
    partial void Onclient_professionChanging(string value);
    partial void Onclient_professionChanged();
    partial void Onclient_phoneChanging(string value);
    partial void Onclient_phoneChanged();
    #endregion
		
		public client()
		{
			this._appointments = new EntitySet<appointment>(new Action<appointment>(this.attach_appointments), new Action<appointment>(this.detach_appointments));
			this._UserLogin = default(EntityRef<UserLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int client_id
		{
			get
			{
				return this._client_id;
			}
			set
			{
				if ((this._client_id != value))
				{
					this.Onclient_idChanging(value);
					this.SendPropertyChanging();
					this._client_id = value;
					this.SendPropertyChanged("client_id");
					this.Onclient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_LoginID", DbType="Int NOT NULL")]
		public int client_LoginID
		{
			get
			{
				return this._client_LoginID;
			}
			set
			{
				if ((this._client_LoginID != value))
				{
					if (this._UserLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onclient_LoginIDChanging(value);
					this.SendPropertyChanging();
					this._client_LoginID = value;
					this.SendPropertyChanged("client_LoginID");
					this.Onclient_LoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_fname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string client_fname
		{
			get
			{
				return this._client_fname;
			}
			set
			{
				if ((this._client_fname != value))
				{
					this.Onclient_fnameChanging(value);
					this.SendPropertyChanging();
					this._client_fname = value;
					this.SendPropertyChanged("client_fname");
					this.Onclient_fnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_lname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string client_lname
		{
			get
			{
				return this._client_lname;
			}
			set
			{
				if ((this._client_lname != value))
				{
					this.Onclient_lnameChanging(value);
					this.SendPropertyChanging();
					this._client_lname = value;
					this.SendPropertyChanged("client_lname");
					this.Onclient_lnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_gender", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string client_gender
		{
			get
			{
				return this._client_gender;
			}
			set
			{
				if ((this._client_gender != value))
				{
					this.Onclient_genderChanging(value);
					this.SendPropertyChanging();
					this._client_gender = value;
					this.SendPropertyChanged("client_gender");
					this.Onclient_genderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_street", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string client_street
		{
			get
			{
				return this._client_street;
			}
			set
			{
				if ((this._client_street != value))
				{
					this.Onclient_streetChanging(value);
					this.SendPropertyChanging();
					this._client_street = value;
					this.SendPropertyChanged("client_street");
					this.Onclient_streetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_city", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string client_city
		{
			get
			{
				return this._client_city;
			}
			set
			{
				if ((this._client_city != value))
				{
					this.Onclient_cityChanging(value);
					this.SendPropertyChanging();
					this._client_city = value;
					this.SendPropertyChanged("client_city");
					this.Onclient_cityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_parish", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string client_parish
		{
			get
			{
				return this._client_parish;
			}
			set
			{
				if ((this._client_parish != value))
				{
					this.Onclient_parishChanging(value);
					this.SendPropertyChanging();
					this._client_parish = value;
					this.SendPropertyChanged("client_parish");
					this.Onclient_parishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_profession", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string client_profession
		{
			get
			{
				return this._client_profession;
			}
			set
			{
				if ((this._client_profession != value))
				{
					this.Onclient_professionChanging(value);
					this.SendPropertyChanging();
					this._client_profession = value;
					this.SendPropertyChanged("client_profession");
					this.Onclient_professionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_phone", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string client_phone
		{
			get
			{
				return this._client_phone;
			}
			set
			{
				if ((this._client_phone != value))
				{
					this.Onclient_phoneChanging(value);
					this.SendPropertyChanging();
					this._client_phone = value;
					this.SendPropertyChanged("client_phone");
					this.Onclient_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_appointment", Storage="_appointments", ThisKey="client_id", OtherKey="client_id")]
		public EntitySet<appointment> appointments
		{
			get
			{
				return this._appointments;
			}
			set
			{
				this._appointments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserLogin_client", Storage="_UserLogin", ThisKey="client_LoginID", OtherKey="LoginID", IsForeignKey=true)]
		public UserLogin UserLogin
		{
			get
			{
				return this._UserLogin.Entity;
			}
			set
			{
				UserLogin previousValue = this._UserLogin.Entity;
				if (((previousValue != value) 
							|| (this._UserLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserLogin.Entity = null;
						previousValue.clients.Remove(this);
					}
					this._UserLogin.Entity = value;
					if ((value != null))
					{
						value.clients.Add(this);
						this._client_LoginID = value.LoginID;
					}
					else
					{
						this._client_LoginID = default(int);
					}
					this.SendPropertyChanged("UserLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_appointments(appointment entity)
		{
			this.SendPropertyChanging();
			entity.client = this;
		}
		
		private void detach_appointments(appointment entity)
		{
			this.SendPropertyChanging();
			entity.client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.comments")]
	public partial class comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contact_id;
		
		private string _contact_name;
		
		private string _contact_email;
		
		private string _contact_phone;
		
		private string _contact_regs;
		
		private string _contact_comments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncontact_idChanging(int value);
    partial void Oncontact_idChanged();
    partial void Oncontact_nameChanging(string value);
    partial void Oncontact_nameChanged();
    partial void Oncontact_emailChanging(string value);
    partial void Oncontact_emailChanged();
    partial void Oncontact_phoneChanging(string value);
    partial void Oncontact_phoneChanged();
    partial void Oncontact_regsChanging(string value);
    partial void Oncontact_regsChanged();
    partial void Oncontact_commentsChanging(string value);
    partial void Oncontact_commentsChanged();
    #endregion
		
		public comment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int contact_id
		{
			get
			{
				return this._contact_id;
			}
			set
			{
				if ((this._contact_id != value))
				{
					this.Oncontact_idChanging(value);
					this.SendPropertyChanging();
					this._contact_id = value;
					this.SendPropertyChanged("contact_id");
					this.Oncontact_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_name", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string contact_name
		{
			get
			{
				return this._contact_name;
			}
			set
			{
				if ((this._contact_name != value))
				{
					this.Oncontact_nameChanging(value);
					this.SendPropertyChanging();
					this._contact_name = value;
					this.SendPropertyChanged("contact_name");
					this.Oncontact_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_email", DbType="VarChar(30)")]
		public string contact_email
		{
			get
			{
				return this._contact_email;
			}
			set
			{
				if ((this._contact_email != value))
				{
					this.Oncontact_emailChanging(value);
					this.SendPropertyChanging();
					this._contact_email = value;
					this.SendPropertyChanged("contact_email");
					this.Oncontact_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_phone", DbType="VarChar(15)")]
		public string contact_phone
		{
			get
			{
				return this._contact_phone;
			}
			set
			{
				if ((this._contact_phone != value))
				{
					this.Oncontact_phoneChanging(value);
					this.SendPropertyChanging();
					this._contact_phone = value;
					this.SendPropertyChanged("contact_phone");
					this.Oncontact_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_regs", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string contact_regs
		{
			get
			{
				return this._contact_regs;
			}
			set
			{
				if ((this._contact_regs != value))
				{
					this.Oncontact_regsChanging(value);
					this.SendPropertyChanging();
					this._contact_regs = value;
					this.SendPropertyChanged("contact_regs");
					this.Oncontact_regsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_comments", DbType="VarChar(600) NOT NULL", CanBeNull=false)]
		public string contact_comments
		{
			get
			{
				return this._contact_comments;
			}
			set
			{
				if ((this._contact_comments != value))
				{
					this.Oncontact_commentsChanging(value);
					this.SendPropertyChanging();
					this._contact_comments = value;
					this.SendPropertyChanged("contact_comments");
					this.Oncontact_commentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employee")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _employee_id;
		
		private string _employee_type;
		
		private string _employee_fname;
		
		private string _employee_gender;
		
		private string _employee_street;
		
		private string _employee_city;
		
		private string _employee_parish;
		
		private string _employee_phone;
		
		private double _employee_yoe;
		
		private string _employee_email;
		
		private EntitySet<schedule> _schedules;
		
		private EntitySet<skill> _skills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemployee_idChanging(int value);
    partial void Onemployee_idChanged();
    partial void Onemployee_typeChanging(string value);
    partial void Onemployee_typeChanged();
    partial void Onemployee_fnameChanging(string value);
    partial void Onemployee_fnameChanged();
    partial void Onemployee_genderChanging(string value);
    partial void Onemployee_genderChanged();
    partial void Onemployee_streetChanging(string value);
    partial void Onemployee_streetChanged();
    partial void Onemployee_cityChanging(string value);
    partial void Onemployee_cityChanged();
    partial void Onemployee_parishChanging(string value);
    partial void Onemployee_parishChanged();
    partial void Onemployee_phoneChanging(string value);
    partial void Onemployee_phoneChanged();
    partial void Onemployee_yoeChanging(double value);
    partial void Onemployee_yoeChanged();
    partial void Onemployee_emailChanging(string value);
    partial void Onemployee_emailChanged();
    #endregion
		
		public employee()
		{
			this._schedules = new EntitySet<schedule>(new Action<schedule>(this.attach_schedules), new Action<schedule>(this.detach_schedules));
			this._skills = new EntitySet<skill>(new Action<skill>(this.attach_skills), new Action<skill>(this.detach_skills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string employee_type
		{
			get
			{
				return this._employee_type;
			}
			set
			{
				if ((this._employee_type != value))
				{
					this.Onemployee_typeChanging(value);
					this.SendPropertyChanging();
					this._employee_type = value;
					this.SendPropertyChanged("employee_type");
					this.Onemployee_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_fname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string employee_fname
		{
			get
			{
				return this._employee_fname;
			}
			set
			{
				if ((this._employee_fname != value))
				{
					this.Onemployee_fnameChanging(value);
					this.SendPropertyChanging();
					this._employee_fname = value;
					this.SendPropertyChanged("employee_fname");
					this.Onemployee_fnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_gender", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string employee_gender
		{
			get
			{
				return this._employee_gender;
			}
			set
			{
				if ((this._employee_gender != value))
				{
					this.Onemployee_genderChanging(value);
					this.SendPropertyChanging();
					this._employee_gender = value;
					this.SendPropertyChanged("employee_gender");
					this.Onemployee_genderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_street", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string employee_street
		{
			get
			{
				return this._employee_street;
			}
			set
			{
				if ((this._employee_street != value))
				{
					this.Onemployee_streetChanging(value);
					this.SendPropertyChanging();
					this._employee_street = value;
					this.SendPropertyChanged("employee_street");
					this.Onemployee_streetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_city", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string employee_city
		{
			get
			{
				return this._employee_city;
			}
			set
			{
				if ((this._employee_city != value))
				{
					this.Onemployee_cityChanging(value);
					this.SendPropertyChanging();
					this._employee_city = value;
					this.SendPropertyChanged("employee_city");
					this.Onemployee_cityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_parish", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string employee_parish
		{
			get
			{
				return this._employee_parish;
			}
			set
			{
				if ((this._employee_parish != value))
				{
					this.Onemployee_parishChanging(value);
					this.SendPropertyChanging();
					this._employee_parish = value;
					this.SendPropertyChanged("employee_parish");
					this.Onemployee_parishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_phone", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string employee_phone
		{
			get
			{
				return this._employee_phone;
			}
			set
			{
				if ((this._employee_phone != value))
				{
					this.Onemployee_phoneChanging(value);
					this.SendPropertyChanging();
					this._employee_phone = value;
					this.SendPropertyChanged("employee_phone");
					this.Onemployee_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_yoe", DbType="Float NOT NULL")]
		public double employee_yoe
		{
			get
			{
				return this._employee_yoe;
			}
			set
			{
				if ((this._employee_yoe != value))
				{
					this.Onemployee_yoeChanging(value);
					this.SendPropertyChanging();
					this._employee_yoe = value;
					this.SendPropertyChanged("employee_yoe");
					this.Onemployee_yoeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_email", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string employee_email
		{
			get
			{
				return this._employee_email;
			}
			set
			{
				if ((this._employee_email != value))
				{
					this.Onemployee_emailChanging(value);
					this.SendPropertyChanging();
					this._employee_email = value;
					this.SendPropertyChanged("employee_email");
					this.Onemployee_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_schedule", Storage="_schedules", ThisKey="employee_id", OtherKey="employee_id")]
		public EntitySet<schedule> schedules
		{
			get
			{
				return this._schedules;
			}
			set
			{
				this._schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_skill", Storage="_skills", ThisKey="employee_id", OtherKey="employee_id")]
		public EntitySet<skill> skills
		{
			get
			{
				return this._skills;
			}
			set
			{
				this._skills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_schedules(schedule entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_schedules(schedule entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_skills(skill entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_skills(skill entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.schedule")]
	public partial class schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _schedule_id;
		
		private int _employee_id;
		
		private System.DateTime _sch_date;
		
		private bool @__8_00_am;
		
		private bool @__9_00_am;
		
		private bool @__10_00_am;
		
		private bool @__11_00_am;
		
		private bool @__12_00_pm;
		
		private bool @__1_00_pm;
		
		private bool @__2_00_pm;
		
		private bool @__3_00_pm;
		
		private bool @__4_00_pm;
		
		private bool @__5_00_pm;
		
		private EntitySet<appointment_emp> _appointment_emps;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onschedule_idChanging(int value);
    partial void Onschedule_idChanged();
    partial void Onemployee_idChanging(int value);
    partial void Onemployee_idChanged();
    partial void Onsch_dateChanging(System.DateTime value);
    partial void Onsch_dateChanged();
    partial void On_8_00_amChanging(bool value);
    partial void On_8_00_amChanged();
    partial void On_9_00_amChanging(bool value);
    partial void On_9_00_amChanged();
    partial void On_10_00_amChanging(bool value);
    partial void On_10_00_amChanged();
    partial void On_11_00_amChanging(bool value);
    partial void On_11_00_amChanged();
    partial void On_12_00_pmChanging(bool value);
    partial void On_12_00_pmChanged();
    partial void On_1_00_pmChanging(bool value);
    partial void On_1_00_pmChanged();
    partial void On_2_00_pmChanging(bool value);
    partial void On_2_00_pmChanged();
    partial void On_3_00_pmChanging(bool value);
    partial void On_3_00_pmChanged();
    partial void On_4_00_pmChanging(bool value);
    partial void On_4_00_pmChanged();
    partial void On_5_00_pmChanging(bool value);
    partial void On_5_00_pmChanged();
    #endregion
		
		public schedule()
		{
			this._appointment_emps = new EntitySet<appointment_emp>(new Action<appointment_emp>(this.attach_appointment_emps), new Action<appointment_emp>(this.detach_appointment_emps));
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int schedule_id
		{
			get
			{
				return this._schedule_id;
			}
			set
			{
				if ((this._schedule_id != value))
				{
					this.Onschedule_idChanging(value);
					this.SendPropertyChanging();
					this._schedule_id = value;
					this.SendPropertyChanged("schedule_id");
					this.Onschedule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sch_date", DbType="Date NOT NULL")]
		public System.DateTime sch_date
		{
			get
			{
				return this._sch_date;
			}
			set
			{
				if ((this._sch_date != value))
				{
					this.Onsch_dateChanging(value);
					this.SendPropertyChanging();
					this._sch_date = value;
					this.SendPropertyChanged("sch_date");
					this.Onsch_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[8:00 am]", Storage="__8_00_am", DbType="Bit NOT NULL")]
		public bool _8_00_am
		{
			get
			{
				return this.@__8_00_am;
			}
			set
			{
				if ((this.@__8_00_am != value))
				{
					this.On_8_00_amChanging(value);
					this.SendPropertyChanging();
					this.@__8_00_am = value;
					this.SendPropertyChanged("_8_00_am");
					this.On_8_00_amChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[9:00 am]", Storage="__9_00_am", DbType="Bit NOT NULL")]
		public bool _9_00_am
		{
			get
			{
				return this.@__9_00_am;
			}
			set
			{
				if ((this.@__9_00_am != value))
				{
					this.On_9_00_amChanging(value);
					this.SendPropertyChanging();
					this.@__9_00_am = value;
					this.SendPropertyChanged("_9_00_am");
					this.On_9_00_amChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[10:00 am]", Storage="__10_00_am", DbType="Bit NOT NULL")]
		public bool _10_00_am
		{
			get
			{
				return this.@__10_00_am;
			}
			set
			{
				if ((this.@__10_00_am != value))
				{
					this.On_10_00_amChanging(value);
					this.SendPropertyChanging();
					this.@__10_00_am = value;
					this.SendPropertyChanged("_10_00_am");
					this.On_10_00_amChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[11:00 am]", Storage="__11_00_am", DbType="Bit NOT NULL")]
		public bool _11_00_am
		{
			get
			{
				return this.@__11_00_am;
			}
			set
			{
				if ((this.@__11_00_am != value))
				{
					this.On_11_00_amChanging(value);
					this.SendPropertyChanging();
					this.@__11_00_am = value;
					this.SendPropertyChanged("_11_00_am");
					this.On_11_00_amChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[12:00 pm]", Storage="__12_00_pm", DbType="Bit NOT NULL")]
		public bool _12_00_pm
		{
			get
			{
				return this.@__12_00_pm;
			}
			set
			{
				if ((this.@__12_00_pm != value))
				{
					this.On_12_00_pmChanging(value);
					this.SendPropertyChanging();
					this.@__12_00_pm = value;
					this.SendPropertyChanged("_12_00_pm");
					this.On_12_00_pmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[1:00 pm]", Storage="__1_00_pm", DbType="Bit NOT NULL")]
		public bool _1_00_pm
		{
			get
			{
				return this.@__1_00_pm;
			}
			set
			{
				if ((this.@__1_00_pm != value))
				{
					this.On_1_00_pmChanging(value);
					this.SendPropertyChanging();
					this.@__1_00_pm = value;
					this.SendPropertyChanged("_1_00_pm");
					this.On_1_00_pmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[2:00 pm]", Storage="__2_00_pm", DbType="Bit NOT NULL")]
		public bool _2_00_pm
		{
			get
			{
				return this.@__2_00_pm;
			}
			set
			{
				if ((this.@__2_00_pm != value))
				{
					this.On_2_00_pmChanging(value);
					this.SendPropertyChanging();
					this.@__2_00_pm = value;
					this.SendPropertyChanged("_2_00_pm");
					this.On_2_00_pmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[3:00 pm]", Storage="__3_00_pm", DbType="Bit NOT NULL")]
		public bool _3_00_pm
		{
			get
			{
				return this.@__3_00_pm;
			}
			set
			{
				if ((this.@__3_00_pm != value))
				{
					this.On_3_00_pmChanging(value);
					this.SendPropertyChanging();
					this.@__3_00_pm = value;
					this.SendPropertyChanged("_3_00_pm");
					this.On_3_00_pmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[4:00 pm]", Storage="__4_00_pm", DbType="Bit NOT NULL")]
		public bool _4_00_pm
		{
			get
			{
				return this.@__4_00_pm;
			}
			set
			{
				if ((this.@__4_00_pm != value))
				{
					this.On_4_00_pmChanging(value);
					this.SendPropertyChanging();
					this.@__4_00_pm = value;
					this.SendPropertyChanged("_4_00_pm");
					this.On_4_00_pmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[5:00 pm]", Storage="__5_00_pm", DbType="Bit NOT NULL")]
		public bool _5_00_pm
		{
			get
			{
				return this.@__5_00_pm;
			}
			set
			{
				if ((this.@__5_00_pm != value))
				{
					this.On_5_00_pmChanging(value);
					this.SendPropertyChanging();
					this.@__5_00_pm = value;
					this.SendPropertyChanged("_5_00_pm");
					this.On_5_00_pmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="schedule_appointment_emp", Storage="_appointment_emps", ThisKey="schedule_id,employee_id", OtherKey="schedule_id,emp_id")]
		public EntitySet<appointment_emp> appointment_emps
		{
			get
			{
				return this._appointment_emps;
			}
			set
			{
				this._appointment_emps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_schedule", Storage="_employee", ThisKey="employee_id", OtherKey="employee_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.schedules.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.schedules.Add(this);
						this._employee_id = value.employee_id;
					}
					else
					{
						this._employee_id = default(int);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_appointment_emps(appointment_emp entity)
		{
			this.SendPropertyChanging();
			entity.schedule = this;
		}
		
		private void detach_appointment_emps(appointment_emp entity)
		{
			this.SendPropertyChanging();
			entity.schedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.service")]
	public partial class service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _service_id;
		
		private string _service_type;
		
		private decimal _price;
		
		private EntitySet<appointment_service> _appointment_services;
		
		private EntitySet<skill> _skills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onservice_idChanging(int value);
    partial void Onservice_idChanged();
    partial void Onservice_typeChanging(string value);
    partial void Onservice_typeChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    #endregion
		
		public service()
		{
			this._appointment_services = new EntitySet<appointment_service>(new Action<appointment_service>(this.attach_appointment_services), new Action<appointment_service>(this.detach_appointment_services));
			this._skills = new EntitySet<skill>(new Action<skill>(this.attach_skills), new Action<skill>(this.detach_skills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_type", DbType="VarChar(1200) NOT NULL", CanBeNull=false)]
		public string service_type
		{
			get
			{
				return this._service_type;
			}
			set
			{
				if ((this._service_type != value))
				{
					this.Onservice_typeChanging(value);
					this.SendPropertyChanging();
					this._service_type = value;
					this.SendPropertyChanged("service_type");
					this.Onservice_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Money NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="service_appointment_service", Storage="_appointment_services", ThisKey="service_id", OtherKey="service_id")]
		public EntitySet<appointment_service> appointment_services
		{
			get
			{
				return this._appointment_services;
			}
			set
			{
				this._appointment_services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="service_skill", Storage="_skills", ThisKey="service_id", OtherKey="service_id")]
		public EntitySet<skill> skills
		{
			get
			{
				return this._skills;
			}
			set
			{
				this._skills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_appointment_services(appointment_service entity)
		{
			this.SendPropertyChanging();
			entity.service = this;
		}
		
		private void detach_appointment_services(appointment_service entity)
		{
			this.SendPropertyChanging();
			entity.service = null;
		}
		
		private void attach_skills(skill entity)
		{
			this.SendPropertyChanging();
			entity.service = this;
		}
		
		private void detach_skills(skill entity)
		{
			this.SendPropertyChanging();
			entity.service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.skills")]
	public partial class skill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _skills_id;
		
		private int _employee_id;
		
		private int _service_id;
		
		private EntityRef<employee> _employee;
		
		private EntityRef<service> _service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onskills_idChanging(int value);
    partial void Onskills_idChanged();
    partial void Onemployee_idChanging(int value);
    partial void Onemployee_idChanged();
    partial void Onservice_idChanging(int value);
    partial void Onservice_idChanged();
    #endregion
		
		public skill()
		{
			this._employee = default(EntityRef<employee>);
			this._service = default(EntityRef<service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skills_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int skills_id
		{
			get
			{
				return this._skills_id;
			}
			set
			{
				if ((this._skills_id != value))
				{
					this.Onskills_idChanging(value);
					this.SendPropertyChanging();
					this._skills_id = value;
					this.SendPropertyChanged("skills_id");
					this.Onskills_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					if (this._service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_skill", Storage="_employee", ThisKey="employee_id", OtherKey="employee_id", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.skills.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.skills.Add(this);
						this._employee_id = value.employee_id;
					}
					else
					{
						this._employee_id = default(int);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="service_skill", Storage="_service", ThisKey="service_id", OtherKey="service_id", IsForeignKey=true)]
		public service service
		{
			get
			{
				return this._service.Entity;
			}
			set
			{
				service previousValue = this._service.Entity;
				if (((previousValue != value) 
							|| (this._service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._service.Entity = null;
						previousValue.skills.Remove(this);
					}
					this._service.Entity = value;
					if ((value != null))
					{
						value.skills.Add(this);
						this._service_id = value.service_id;
					}
					else
					{
						this._service_id = default(int);
					}
					this.SendPropertyChanged("service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLogin")]
	public partial class UserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoginID;
		
		private string _LoginName;
		
		private string _LoginPassword;
		
		private string _LoginEmail;
		
		private short _LoginEnable;
		
		private short _LoginDenied;
		
		private System.DateTime _LoginDate;
		
		private EntityRef<UserValidate> _UserValidate;
		
		private EntitySet<client> _clients;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginIDChanging(int value);
    partial void OnLoginIDChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnLoginPasswordChanging(string value);
    partial void OnLoginPasswordChanged();
    partial void OnLoginEmailChanging(string value);
    partial void OnLoginEmailChanged();
    partial void OnLoginEnableChanging(short value);
    partial void OnLoginEnableChanged();
    partial void OnLoginDeniedChanging(short value);
    partial void OnLoginDeniedChanged();
    partial void OnLoginDateChanging(System.DateTime value);
    partial void OnLoginDateChanged();
    #endregion
		
		public UserLogin()
		{
			this._UserValidate = default(EntityRef<UserValidate>);
			this._clients = new EntitySet<client>(new Action<client>(this.attach_clients), new Action<client>(this.detach_clients));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPassword", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string LoginPassword
		{
			get
			{
				return this._LoginPassword;
			}
			set
			{
				if ((this._LoginPassword != value))
				{
					this.OnLoginPasswordChanging(value);
					this.SendPropertyChanging();
					this._LoginPassword = value;
					this.SendPropertyChanged("LoginPassword");
					this.OnLoginPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginEmail", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string LoginEmail
		{
			get
			{
				return this._LoginEmail;
			}
			set
			{
				if ((this._LoginEmail != value))
				{
					this.OnLoginEmailChanging(value);
					this.SendPropertyChanging();
					this._LoginEmail = value;
					this.SendPropertyChanged("LoginEmail");
					this.OnLoginEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginEnable", DbType="SmallInt NOT NULL")]
		public short LoginEnable
		{
			get
			{
				return this._LoginEnable;
			}
			set
			{
				if ((this._LoginEnable != value))
				{
					this.OnLoginEnableChanging(value);
					this.SendPropertyChanging();
					this._LoginEnable = value;
					this.SendPropertyChanged("LoginEnable");
					this.OnLoginEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDenied", DbType="SmallInt NOT NULL")]
		public short LoginDenied
		{
			get
			{
				return this._LoginDenied;
			}
			set
			{
				if ((this._LoginDenied != value))
				{
					this.OnLoginDeniedChanging(value);
					this.SendPropertyChanging();
					this._LoginDenied = value;
					this.SendPropertyChanged("LoginDenied");
					this.OnLoginDeniedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this.OnLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LoginDate = value;
					this.SendPropertyChanged("LoginDate");
					this.OnLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserLogin_UserValidate", Storage="_UserValidate", ThisKey="LoginID", OtherKey="LoginID", IsUnique=true, IsForeignKey=false)]
		public UserValidate UserValidate
		{
			get
			{
				return this._UserValidate.Entity;
			}
			set
			{
				UserValidate previousValue = this._UserValidate.Entity;
				if (((previousValue != value) 
							|| (this._UserValidate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserValidate.Entity = null;
						previousValue.UserLogin = null;
					}
					this._UserValidate.Entity = value;
					if ((value != null))
					{
						value.UserLogin = this;
					}
					this.SendPropertyChanged("UserValidate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserLogin_client", Storage="_clients", ThisKey="LoginID", OtherKey="client_LoginID")]
		public EntitySet<client> clients
		{
			get
			{
				return this._clients;
			}
			set
			{
				this._clients.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_clients(client entity)
		{
			this.SendPropertyChanging();
			entity.UserLogin = this;
		}
		
		private void detach_clients(client entity)
		{
			this.SendPropertyChanging();
			entity.UserLogin = null;
		}
	}
	
	public partial class SP_CheckEmployeeResult
	{
		
		private int _employee_id;
		
		private System.DateTime _sch_date;
		
		private bool @__8_00_am;
		
		private bool @__9_00_am;
		
		private bool @__10_00_am;
		
		private bool @__11_00_am;
		
		private bool @__12_00_pm;
		
		private bool @__1_00_pm;
		
		private bool @__2_00_pm;
		
		private bool @__3_00_pm;
		
		private bool @__4_00_pm;
		
		private bool @__5_00_pm;
		
		private string _employee_fname;
		
		public SP_CheckEmployeeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="Int NOT NULL")]
		public int employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					this._employee_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sch_date", DbType="Date NOT NULL")]
		public System.DateTime sch_date
		{
			get
			{
				return this._sch_date;
			}
			set
			{
				if ((this._sch_date != value))
				{
					this._sch_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[8:00 am]", Storage="__8_00_am", DbType="Bit NOT NULL")]
		public bool _8_00_am
		{
			get
			{
				return this.@__8_00_am;
			}
			set
			{
				if ((this.@__8_00_am != value))
				{
					this.@__8_00_am = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[9:00 am]", Storage="__9_00_am", DbType="Bit NOT NULL")]
		public bool _9_00_am
		{
			get
			{
				return this.@__9_00_am;
			}
			set
			{
				if ((this.@__9_00_am != value))
				{
					this.@__9_00_am = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[10:00 am]", Storage="__10_00_am", DbType="Bit NOT NULL")]
		public bool _10_00_am
		{
			get
			{
				return this.@__10_00_am;
			}
			set
			{
				if ((this.@__10_00_am != value))
				{
					this.@__10_00_am = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[11:00 am]", Storage="__11_00_am", DbType="Bit NOT NULL")]
		public bool _11_00_am
		{
			get
			{
				return this.@__11_00_am;
			}
			set
			{
				if ((this.@__11_00_am != value))
				{
					this.@__11_00_am = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[12:00 pm]", Storage="__12_00_pm", DbType="Bit NOT NULL")]
		public bool _12_00_pm
		{
			get
			{
				return this.@__12_00_pm;
			}
			set
			{
				if ((this.@__12_00_pm != value))
				{
					this.@__12_00_pm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[1:00 pm]", Storage="__1_00_pm", DbType="Bit NOT NULL")]
		public bool _1_00_pm
		{
			get
			{
				return this.@__1_00_pm;
			}
			set
			{
				if ((this.@__1_00_pm != value))
				{
					this.@__1_00_pm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[2:00 pm]", Storage="__2_00_pm", DbType="Bit NOT NULL")]
		public bool _2_00_pm
		{
			get
			{
				return this.@__2_00_pm;
			}
			set
			{
				if ((this.@__2_00_pm != value))
				{
					this.@__2_00_pm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[3:00 pm]", Storage="__3_00_pm", DbType="Bit NOT NULL")]
		public bool _3_00_pm
		{
			get
			{
				return this.@__3_00_pm;
			}
			set
			{
				if ((this.@__3_00_pm != value))
				{
					this.@__3_00_pm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[4:00 pm]", Storage="__4_00_pm", DbType="Bit NOT NULL")]
		public bool _4_00_pm
		{
			get
			{
				return this.@__4_00_pm;
			}
			set
			{
				if ((this.@__4_00_pm != value))
				{
					this.@__4_00_pm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[5:00 pm]", Storage="__5_00_pm", DbType="Bit NOT NULL")]
		public bool _5_00_pm
		{
			get
			{
				return this.@__5_00_pm;
			}
			set
			{
				if ((this.@__5_00_pm != value))
				{
					this.@__5_00_pm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_fname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string employee_fname
		{
			get
			{
				return this._employee_fname;
			}
			set
			{
				if ((this._employee_fname != value))
				{
					this._employee_fname = value;
				}
			}
		}
	}
	
	public partial class SP_SelectEmployeeResult
	{
		
		private int _employee_id;
		
		private string _employee_fname;
		
		private string _employee_lname;
		
		public SP_SelectEmployeeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="Int NOT NULL")]
		public int employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					this._employee_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_fname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string employee_fname
		{
			get
			{
				return this._employee_fname;
			}
			set
			{
				if ((this._employee_fname != value))
				{
					this._employee_fname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_lname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string employee_lname
		{
			get
			{
				return this._employee_lname;
			}
			set
			{
				if ((this._employee_lname != value))
				{
					this._employee_lname = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
